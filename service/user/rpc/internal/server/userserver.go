// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	logic2 "blog/service/user/rpc/internal/logic"
	"blog/service/user/rpc/internal/svc"
	user2 "blog/service/user/rpc/types/user"
	"context"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user2.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) CreateUser(ctx context.Context, in *user2.CreateUserReq) (*user2.CreateUserRes, error) {
	l := logic2.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

func (s *UserServer) UpdateUser(ctx context.Context, in *user2.UpdateUserReq) (*user2.UpdateUserRes, error) {
	l := logic2.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UserServer) DelUser(ctx context.Context, in *user2.DelUserReq) (*user2.DelUserRes, error) {
	l := logic2.NewDelUserLogic(ctx, s.svcCtx)
	return l.DelUser(in)
}

func (s *UserServer) UserInfo(ctx context.Context, in *user2.UserInfoReq) (*user2.UserInfoRes, error) {
	l := logic2.NewUserInfoLogic(ctx, s.svcCtx)
	return l.UserInfo(in)
}
