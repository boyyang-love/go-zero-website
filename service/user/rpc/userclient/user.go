// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package userclient

import (
	user2 "blog/service/user/rpc/types/user"
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateUserReq = user2.CreateUserReq
	CreateUserRes = user2.CreateUserRes
	DelUserReq    = user2.DelUserReq
	DelUserRes    = user2.DelUserRes
	UpdateUserReq = user2.UpdateUserReq
	UpdateUserRes = user2.UpdateUserRes
	UserInfoReq   = user2.UserInfoReq
	UserInfoRes   = user2.UserInfoRes

	User interface {
		CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserRes, error)
		UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserRes, error)
		DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserRes, error)
		UserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoRes, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserRes, error) {
	client := user2.NewUserClient(m.cli.Conn())
	return client.CreateUser(ctx, in, opts...)
}

func (m *defaultUser) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserRes, error) {
	client := user2.NewUserClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}

func (m *defaultUser) DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserRes, error) {
	client := user2.NewUserClient(m.cli.Conn())
	return client.DelUser(ctx, in, opts...)
}

func (m *defaultUser) UserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoRes, error) {
	client := user2.NewUserClient(m.cli.Conn())
	return client.UserInfo(ctx, in, opts...)
}
