// Code generated by goctl. DO NOT EDIT!
// Source: photoExhibition.proto

package photoexhibitionclient

import (
	"context"

	"blog/service/photoExhibition/rpc/types/photoExhibition"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreatePhotoExhibitionReq = photoExhibition.CreatePhotoExhibitionReq
	CreatePhotoExhibitionRes = photoExhibition.CreatePhotoExhibitionRes
	DelPhotoExhibitionReq    = photoExhibition.DelPhotoExhibitionReq
	DelPhotoExhibitionRes    = photoExhibition.DelPhotoExhibitionRes
	EditPhotoExhibitionReq   = photoExhibition.EditPhotoExhibitionReq
	EditPhotoExhibitionRes   = photoExhibition.EditPhotoExhibitionRes
	EditStatusReq            = photoExhibition.EditStatusReq
	EditStatusRes            = photoExhibition.EditStatusRes
	PhotoExhibitionInfoReq   = photoExhibition.PhotoExhibitionInfoReq
	PhotoExhibitionInfoRes   = photoExhibition.PhotoExhibitionInfoRes

	PhotoExhibition interface {
		CreatePhotoExhibition(ctx context.Context, in *CreatePhotoExhibitionReq, opts ...grpc.CallOption) (*CreatePhotoExhibitionRes, error)
		EditPhotoExhibition(ctx context.Context, in *EditPhotoExhibitionReq, opts ...grpc.CallOption) (*EditPhotoExhibitionRes, error)
		DelPhotoExhibition(ctx context.Context, in *DelPhotoExhibitionReq, opts ...grpc.CallOption) (*DelPhotoExhibitionRes, error)
		EditStatus(ctx context.Context, in *EditStatusReq, opts ...grpc.CallOption) (*EditStatusRes, error)
		PhotoExhibitionInfo(ctx context.Context, in *PhotoExhibitionInfoReq, opts ...grpc.CallOption) (*PhotoExhibitionInfoRes, error)
	}

	defaultPhotoExhibition struct {
		cli zrpc.Client
	}
)

func NewPhotoExhibition(cli zrpc.Client) PhotoExhibition {
	return &defaultPhotoExhibition{
		cli: cli,
	}
}

func (m *defaultPhotoExhibition) CreatePhotoExhibition(ctx context.Context, in *CreatePhotoExhibitionReq, opts ...grpc.CallOption) (*CreatePhotoExhibitionRes, error) {
	client := photoExhibition.NewPhotoExhibitionClient(m.cli.Conn())
	return client.CreatePhotoExhibition(ctx, in, opts...)
}

func (m *defaultPhotoExhibition) EditPhotoExhibition(ctx context.Context, in *EditPhotoExhibitionReq, opts ...grpc.CallOption) (*EditPhotoExhibitionRes, error) {
	client := photoExhibition.NewPhotoExhibitionClient(m.cli.Conn())
	return client.EditPhotoExhibition(ctx, in, opts...)
}

func (m *defaultPhotoExhibition) DelPhotoExhibition(ctx context.Context, in *DelPhotoExhibitionReq, opts ...grpc.CallOption) (*DelPhotoExhibitionRes, error) {
	client := photoExhibition.NewPhotoExhibitionClient(m.cli.Conn())
	return client.DelPhotoExhibition(ctx, in, opts...)
}

func (m *defaultPhotoExhibition) EditStatus(ctx context.Context, in *EditStatusReq, opts ...grpc.CallOption) (*EditStatusRes, error) {
	client := photoExhibition.NewPhotoExhibitionClient(m.cli.Conn())
	return client.EditStatus(ctx, in, opts...)
}

func (m *defaultPhotoExhibition) PhotoExhibitionInfo(ctx context.Context, in *PhotoExhibitionInfoReq, opts ...grpc.CallOption) (*PhotoExhibitionInfoRes, error) {
	client := photoExhibition.NewPhotoExhibitionClient(m.cli.Conn())
	return client.PhotoExhibitionInfo(ctx, in, opts...)
}
